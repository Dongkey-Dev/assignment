/**
 * @packageDocumentation
 * @module api.functional.api.v1.rewards.histories
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { RewardHistoryResponseDto } from "../../../../../../libs/shared/src/dtos/reward.dto";

export * as me from "./me";

/**
 * 보상 이력 조회 (관리자/감사자/운영자 전용)
 *
 * @tag rewards
 * @security bearer
 * @summary 보상 이력을 조회합니다. 선택적으로 userId 파라미터를 제공하여 특정 사용자의 이력만 조회할 수 있습니다.
 *
 * @controller RewardsController.getAllRewardHistory
 * @path GET /api/v1/rewards/histories
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getAllRewardHistory(
  connection: IConnection,
): Promise<getAllRewardHistory.Output> {
  return PlainFetcher.fetch(connection, {
    ...getAllRewardHistory.METADATA,
    template: getAllRewardHistory.METADATA.path,
    path: getAllRewardHistory.path(),
  });
}
export namespace getAllRewardHistory {
  export type Output = Primitive<Array<RewardHistoryResponseDto>>;

  export const METADATA = {
    method: "GET",
    path: "/api/v1/rewards/histories",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/api/v1/rewards/histories";
}
